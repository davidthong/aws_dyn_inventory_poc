---
- name: Build YML File
  hosts: localhost
  connection: local
  vars_files: 
    - aws_inventory_sources.yml
    - main.yml

  tasks:

  - name: Clone AWS Inventory Repo
    ansible.builtin.git:
      repo: "{{ git_repo }}"
      dest: "{{ git_working_directory }}"
      clone: yes
      update: yes
      version: main

  - name: "Create a new branch with current timestamp"
    ansible.builtin.shell: "git checkout -b aig_inventory_update_{{ ansible_date_time.iso8601_basic_short }}"
    args:
      chdir: "{{ git_working_directory }}"

  - name: Set facts
    ansible.builtin.set_fact:
      var2:
        - 511309077648
        - 311331131131

  - name: Copy Content
    ansible.builtin.blockinfile:
      path: vars/aws_inventory_sources.yml
      block: "{{ var2 | to_nice_yaml }}"
      insertafter: "aig_accounts"
      mode: "0755"

  - name: Build Inventory Sources
    ansible.builtin.template:
        src: aws_ec2.yml.j2
        dest: inventory/aig_{{ aws_account }}_aws_ec2.yml
    loop_control:
        loop_var: aws_account
    loop: "{{aig_aws_accounts}}"



  - name: Copy generated inventory to git working directory
    copy:
      dest: "{{ git_working_directory }}"
      src: "{{ item }}"
      force: true
    loop:
      - "{{ playbook_dir }}/inventory"

  - name: "Git status after copy"
    ansible.builtin.shell: "git add -A"
    args:
      chdir: "{{ git_working_directory }}"

  - name: "Git status after copy"
    ansible.builtin.shell: "git status"
    args:
      chdir: "{{ git_working_directory }}"


  # - name: "Add output directory to git"
  #   ansible.builtin.shell: |
  #     git config --global user.name "rhaap"
  #     git config --global user.email "rhaap@rhaap.com"
  #     git add -A && git commit -m "RHAAP Job ID {{ tower_job_id }}: Automated Commit by Ansible  " && git push
  #   args:
  #     chdir: "{{ git_working_directory }}"
  #   ignore_errors: true
  #   register: output
  #   failed_when: >
  #     output.msg != "" and
  #     ("error" in output.msg or
  #     "conflict" in output.msg or
  #     "Errno" in output.msg or
  #     "fatal" in output.msg or
  #     (output.stdout != "" and
  #     "nothing to commit, working tree clean" not in output.stdout) or
  #     (output.stderr != ""))

    # - name: Git checkout
    #   ansible.builtin.git:
    #     repo: "{{ git_repo }}"
    #     dest: "{{ playbook_dir }}"
    #     version: main
      #  version: "aig_inventory_update_{{ ansible_date_time.iso8601_basic_short }}"

   


   


