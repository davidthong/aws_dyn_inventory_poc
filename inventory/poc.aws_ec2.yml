---
plugin: aws_ec2

regions:
  - us-east-1
  
iam_role_arn: "arn:aws:iam::XXXXXXXXXX:role/ec2_dynamic_inventory"

vpc_destination_variable: private_ip_address

# keyed_groups may be used to create custom groups
strict: False
keyed_groups:

groups:
  linux: '"tag_ostype_linux" in (tags|list)'
  windows: '"tag_ostype_windows" in (tags|list)'

filters:
   tag:patchgroup: "prod5"
  # Note: I(hostnames) sets the inventory_hostname. To modify ansible_host without modifying
# inventory_hostname use compose (see example below).
hostnames:
  - ip-address
  - dns-name
  - tag:Name
  - private-ip-address
  - tag:Name=Tag1,Name=Tag2  # Return specific hosts only
  - name: 'tag:Name=Tag1,Name=Tag2'
  - name: 'private-ip-address'
    separator: '_'
    prefix: 'tag:Name'
# Set individual variables with compose
compose:
  # Use the private IP address to connect to the host
  # (note: this does not modify inventory_hostname, which is set via I(hostnames))
  ansible_host: private_ip_address
  iam_role_arn: '"arn:aws:iam::XXXXXXXX:role/ec2_dynamic_inventory"'
  aws_region: placement.region
  vpc_fn: '"Test_VPC"'
  aws_type: '"EC2"'
  platform: '"AWS"'
  ostype: tags.ostype
  ansible_winrm_server_cert_validation: "'ignore' if tags.ostype == 'windows'"
  ansible_connection: "'winrm' if tags.ostype == 'windows' else 'ssh'"
  ansible_port: "'5986' if tags.ostype == 'windows' else '22'"
  ansible_become_method: "'runas' if tags.ostype == 'windows' else 'sudo'"
  ansible_winrm_transport: "'credssp' if tags.ostype == 'windows'"
  ansible_user:  !unsafe "'{{ windowsuser }}' if tags.ostype == 'windows' and tags.environment == 'dmz_*' else '{{ domain_username }}' if tags.ostype == 'windows' and tags.environment != 'dmz_*'"
  ansible_password:  !unsafe "'{{ windowspassword }}' if tags.ostype == 'windows' and tags.environment == 'dmz_*' else '{{ domain_password }}' if tags.ostype == 'windows' and tags.environment != 'dmz_*'"
  ansible_become_user:  !unsafe "'{{ windowsuser }}' if tags.ostype == 'windows' and tags.environment == 'dmz_*' else '{{ domain_username }}' if tags.ostype == 'windows' and tags.environment != 'dmz_*'"
  ansible_become_password: !unsafe "'{{ windowspassword }}' if tags.ostype == 'windows' and tags.environment == 'dmz_*' else '{{ domain_password }}' if tags.ostype == 'windows' and tags.environment != 'dmz_*'"